vector <int> list[1001];
int pre[1001], low[1001], parent[1001];
 
void dfs(int v, int & cnt)
{
   pre[v]=cnt++;
   low[v]=pre[v];
   for(int i=0; i<list[v].size(); i++)
   {
      int w=list[v][i];
      if(pre[w]==-1) //an unvisisted edge from v to w
      {
         parent[w]=v;
         printf("%d %d\n", v, w);
         dfs(w, cnt);
         if(low[w]<low[v])
            low[v]=low[w];
         if(low[w]==pre[w]) //must be a bridge	   	
            printf("%d %d\n", w, v);
      }
      else if(parent[v]!=w && pre[w]<pre[v]) //a back link from v to w
      {
         printf("%d %d\n", v, w);
         if(low[w]<low[v])
            low[v]=low[w];
      }
   }
}
